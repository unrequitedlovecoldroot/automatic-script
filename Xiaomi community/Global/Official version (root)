#!/system/bin/sh
# 小米社區自動簽到 - Root Termux 版 (正式版)
#
# 功能清單：
# 1. 第一次執行時 → 自動安裝 cron 任務
#    - 每天 23:59 自動執行此腳本
# 2. 每天簽到流程：
#    - 23:59:35 提前打開 App，確保載入完成
#    - 等到 00:00:00 自動點擊簽到
#    - 00:00:01 再補點一次，避免延遲
# 3. 螢幕狀態判斷
#    - 如果螢幕關閉 → 自動喚醒 & 解鎖
#    - 如果螢幕已開 → 維持現狀
# 4. 螢幕亮度控制
#    - 記錄原始亮度
#    - 簽到時 → 降到最低亮度
#    - 簽到完成 → 還原亮度
# 5. 防止休眠 (Doze)
#    - 簽到過程中保持 CPU 清醒
#    - 結束後恢復休眠設定
# 6. 簽到流程
#    - 自動處理「No Thanks」彈窗
#    - 點擊兩個按鈕進入簽到頁
#    - 等待午夜自動點擊簽到
#    - 判斷簽到是否成功 (橘色 UNLOCK 按鈕是否消失)
#    - 發送 Android 通知
# 7. 收尾處理
#    - 等待 30 秒
#    - 還原亮度
#    - 如果原本螢幕是關閉 → 自動關閉
#    - 如果原本是亮屏 → 維持
# 8. 管理命令
#    - sh signin.sh cron install → 安裝排程
#    - sh signin.sh cron remove  → 移除排程
#    - sh signin.sh cron check   → 檢查排程狀態

PKG="com.mi.global.bbs"
LOGFILE="/data/local/tmp/signin_log.txt"
SCRIPT_PATH="/data/local/tmp/signin.sh"

# 取得螢幕解析度
SIZE=$(wm size | awk '{print $3}')
WIDTH=${SIZE%x*}
HEIGHT=${SIZE#*x}

# 日誌函式
log() {
  MSG="$1"
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $MSG" | tee -a $LOGFILE
}

# 點擊百分比座標
tap_percent() {
  X=$(echo "$WIDTH * $1 / 100" | bc)
  Y=$(echo "$HEIGHT * $2 / 100" | bc)
  input tap ${X%.*} ${Y%.*}
}

# 判斷畫面上是否存在指定文字
check_text() {
  uiautomator dump >/dev/null 2>&1
  grep -q "$1" /sdcard/window_dump.xml
}

# Android 系統通知
notify() {
  MSG="$1"
  cmd notification post -S bigtext -t "小米簽到" "signin_result" "$MSG"
}

# ========================
# 管理 cron 的功能
# ========================
install_cron() {
  CRON_JOB="59 23 * * * sh $SCRIPT_PATH"
  crontab -l 2>/dev/null | grep -q "$SCRIPT_PATH"
  if [ $? -ne 0 ]; then
    (crontab -l 2>/dev/null; echo "$CRON_JOB") | crontab -
    log "🕒 已將簽到腳本加入 cron，每天 23:59 自動執行"
  else
    log "⚠️ cron 任務已存在，無需重複安裝"
  fi
}

remove_cron() {
  crontab -l 2>/dev/null | grep -v "$SCRIPT_PATH" | crontab -
  log "🗑️ 已移除簽到腳本的 cron 任務"
}

check_cron() {
  echo "=== 小米簽到排程檢查 ==="
  CRON_JOB=$(crontab -l 2>/dev/null | grep "$SCRIPT_PATH")
  if [ -n "$CRON_JOB" ]; then
    echo "✅ 已設定簽到排程：$CRON_JOB"
  else
    echo "❌ 未發現簽到排程"
  fi

  CROND_PID=$(ps -ef | grep crond | grep -v grep)
  if [ -n "$CROND_PID" ]; then
    echo "✅ crond 正在運作"
  else
    echo "❌ crond 未在運作"
  fi
  echo "========================"
}

# ========================
# 主程式
# ========================

case "$1 $2" in
  "cron install")
    install_cron
    exit 0
    ;;
  "cron remove")
    remove_cron
    exit 0
    ;;
  "cron check")
    check_cron
    exit 0
    ;;
esac

# ========================
# 簽到流程（完整自動化）
# ========================

log "▶️ 正式版自動簽到流程啟動"

# 等到 23:59:35（提早打開 App）
while true; do
  NOW=$(date +%H:%M:%S)
  if [ "$NOW" = "23:59:35" ]; then
    break
  fi
  sleep 0.5
done

# 關閉並重新打開 App
am force-stop $PKG
sleep 1
monkey -p $PKG -c android.intent.category.LAUNCHER 1 >/dev/null 2>&1
sleep 5
log "📱 打開 App 完成"

# 處理 "No Thanks" 彈窗
if check_text "No Thanks"; then
  tap_percent 49.0 65.1
  log "👉 點擊 'No Thanks'"
  sleep 1
fi

# 進入簽到頁
tap_percent 77.9 95.8
log "✅ 點擊 BTN_1"
sleep 1

tap_percent 43.1 79.6
log "✅ 點擊 BTN_2 → 已停在 UNLOCK 前"
sleep 2   # 等待 2 秒，確保畫面載入完成

log "🕛 等待 00:00:00"

# 等到午夜
while true; do
  NOW=$(date +%H:%M:%S)
  if [ "$NOW" = "00:00:00" ]; then
    break
  fi
  sleep 0.1
done

# 連點簽到按鈕
for i in $(seq 1 5); do
  tap_percent 52.4 92.7
  usleep 50000
done
log "🎯 00:00:00 已完成 5 次簽到點擊"

# 00:00:01 補點一次
while true; do
  NOW=$(date +%H:%M:%S)
  if [ "$NOW" = "00:00:01" ]; then
    tap_percent 52.4 92.7
    log "🛡️ 00:00:01 補點 1 次"
    break
  fi
  sleep 0.1
done

# 判斷是否成功（橘色按鈕消失）
if check_text "UNLOCK"; then
  log "❌ 簽到失敗，橘色按鈕仍存在"
  notify "❌ 簽到失敗，橘色按鈕仍存在"
else
  log "✅ 簽到成功，橘色按鈕已消失"
  notify "✅ 簽到成功"
fi

log "🏁 正式版簽到流程完成"
